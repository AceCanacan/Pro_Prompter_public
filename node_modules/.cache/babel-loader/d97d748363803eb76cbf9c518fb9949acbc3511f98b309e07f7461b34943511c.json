{"ast":null,"code":"var _jsxFileName = \"/Users/acecanacan/Developer/ProPrompter-priv/src/pages/summary.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport SummaryModal from './modal';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { API, graphqlOperation, Auth } from 'aws-amplify';\nimport { createSummary as createSummaryMutation } from '../graphql/mutations';\nimport { useState } from 'react';\nimport '../pages-css/summary.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SummaryPage() {\n  _s();\n  const {\n    state\n  } = useLocation();\n  const [showModal, setShowModal] = React.useState(false);\n  const [title, setTitle] = React.useState('');\n  const [description, setDescription] = React.useState('');\n  const [isEditingFirstSummary, setIsEditingFirstSummary] = React.useState(false);\n  const [isEditingSecondSummary, setIsEditingSecondSummary] = React.useState(false);\n  const [editableFirstSummary, setEditableFirstSummary] = React.useState('');\n  const [editableSecondSummary, setEditableSecondSummary] = React.useState('');\n  const navigate = useNavigate();\n  const [isSaving, setIsSaving] = useState(false);\n  React.useEffect(() => {\n    if (state) {\n      setEditableFirstSummary(state.firstSummary);\n      setEditableSecondSummary(state.secondSummary);\n    }\n  }, [state]);\n  const handleEditFirstSummary = () => {\n    setIsEditingFirstSummary(true);\n  };\n  const handleSaveFirstSummary = () => {\n    setIsEditingFirstSummary(false);\n    state.firstSummary = editableFirstSummary; // Update the state with the edited summary\n  };\n\n  const handleEditSecondSummary = () => {\n    setIsEditingSecondSummary(true);\n  };\n  const handleSaveSecondSummary = () => {\n    setIsEditingSecondSummary(false);\n    state.secondSummary = editableSecondSummary; // Update the state with the edited summary\n  };\n\n  const saveSummaries = async () => {\n    if (isSaving) {\n      return; // If already saving, exit the function\n    }\n\n    setIsSaving(true);\n    try {\n      const user = await Auth.currentAuthenticatedUser();\n      const summaryDetails = {\n        title,\n        description,\n        firstSummary: editableFirstSummary,\n        secondSummary: editableSecondSummary,\n        owner: user.username\n      };\n      if (state && editableFirstSummary && editableSecondSummary && title && description) {\n        await API.graphql(graphqlOperation(createSummaryMutation, {\n          input: summaryDetails\n        }));\n        alert('Summaries saved!');\n        setTitle('');\n        setDescription('');\n        setShowModal(false);\n        navigate('/');\n      } else {\n        alert('Please fill in all fields.');\n      }\n    } catch (err) {\n      if (err === 'No current user') {\n        alert('You must be logged in to save summaries.');\n      } else {\n        console.error('Error saving summaries:', err);\n        alert('Failed to save summaries.');\n      }\n    }\n    setIsSaving(false); // Reset the saving state after the operation\n  };\n\n  const handleOpenModal = () => {\n    setShowModal(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"summary-page-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"summary-page-header\",\n      children: \"Custom Instructions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"summary-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"How would you like ChatGPT to respond?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), isEditingFirstSummary ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: editableFirstSummary,\n        onChange: e => setEditableFirstSummary(e.target.value),\n        onBlur: handleSaveFirstSummary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: handleEditFirstSummary,\n        children: editableFirstSummary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"summary-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"What would you like ChatGPT to know about you to provide better responses?\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), isEditingSecondSummary ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: editableSecondSummary,\n        onChange: e => setEditableSecondSummary(e.target.value),\n        onBlur: handleSaveSecondSummary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        onClick: handleEditSecondSummary,\n        children: editableSecondSummary\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"save-summary-button\",\n      onClick: handleOpenModal,\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), showModal && /*#__PURE__*/_jsxDEV(SummaryModal, {\n      title: title,\n      setTitle: setTitle,\n      description: description,\n      setDescription: setDescription,\n      onSave: saveSummaries,\n      onClose: () => setShowModal(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(SummaryPage, \"X0TsJfqQTL3BqmVIqbDw+QGpimE=\", false, function () {\n  return [useLocation, useNavigate];\n});\n_c = SummaryPage;\nexport default SummaryPage;\nvar _c;\n$RefreshReg$(_c, \"SummaryPage\");","map":{"version":3,"names":["React","SummaryModal","useLocation","useNavigate","API","graphqlOperation","Auth","createSummary","createSummaryMutation","useState","jsxDEV","_jsxDEV","SummaryPage","_s","state","showModal","setShowModal","title","setTitle","description","setDescription","isEditingFirstSummary","setIsEditingFirstSummary","isEditingSecondSummary","setIsEditingSecondSummary","editableFirstSummary","setEditableFirstSummary","editableSecondSummary","setEditableSecondSummary","navigate","isSaving","setIsSaving","useEffect","firstSummary","secondSummary","handleEditFirstSummary","handleSaveFirstSummary","handleEditSecondSummary","handleSaveSecondSummary","saveSummaries","user","currentAuthenticatedUser","summaryDetails","owner","username","graphql","input","alert","err","console","error","handleOpenModal","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","onBlur","onClick","onSave","onClose","_c","$RefreshReg$"],"sources":["/Users/acecanacan/Developer/ProPrompter-priv/src/pages/summary.js"],"sourcesContent":["import React from 'react';\nimport SummaryModal from './modal';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { API, graphqlOperation, Auth } from 'aws-amplify';\nimport { createSummary as createSummaryMutation } from '../graphql/mutations';\nimport { useState } from 'react';\n\nimport '../pages-css/summary.css';\n\nfunction SummaryPage() {\n  const { state } = useLocation();\n  const [showModal, setShowModal] = React.useState(false);\n  const [title, setTitle] = React.useState('');\n  const [description, setDescription] = React.useState('');\n  const [isEditingFirstSummary, setIsEditingFirstSummary] = React.useState(false);\n  const [isEditingSecondSummary, setIsEditingSecondSummary] = React.useState(false);\n  const [editableFirstSummary, setEditableFirstSummary] = React.useState('');\n  const [editableSecondSummary, setEditableSecondSummary] = React.useState('');\n  const navigate = useNavigate();\n  const [isSaving, setIsSaving] = useState(false);\n\n  React.useEffect(() => {\n    if (state) {\n      setEditableFirstSummary(state.firstSummary);\n      setEditableSecondSummary(state.secondSummary);\n    }\n  }, [state]);\n\n  const handleEditFirstSummary = () => {\n    setIsEditingFirstSummary(true);\n  };\n\n  const handleSaveFirstSummary = () => {\n    setIsEditingFirstSummary(false);\n    state.firstSummary = editableFirstSummary; // Update the state with the edited summary\n  };\n\n  const handleEditSecondSummary = () => {\n    setIsEditingSecondSummary(true);\n  };\n\n  const handleSaveSecondSummary = () => {\n    setIsEditingSecondSummary(false);\n    state.secondSummary = editableSecondSummary; // Update the state with the edited summary\n  };\n\n  const saveSummaries = async () => {\n    if (isSaving) {\n      return; // If already saving, exit the function\n    }\n    setIsSaving(true);\n\n  try {\n    const user = await Auth.currentAuthenticatedUser();\n    const summaryDetails = {\n      title,\n      description,\n      firstSummary: editableFirstSummary,\n      secondSummary: editableSecondSummary,\n      owner: user.username\n    };\n\n    if (state && editableFirstSummary && editableSecondSummary && title && description) {\n      await API.graphql(graphqlOperation(createSummaryMutation, { input: summaryDetails }));\n      alert('Summaries saved!');\n      setTitle('');\n      setDescription('');\n      setShowModal(false);\n      navigate('/');\n    } else {\n      alert('Please fill in all fields.');\n    }\n  } catch (err) {\n    if (err === 'No current user') {\n      alert('You must be logged in to save summaries.');\n    } else {\n      console.error('Error saving summaries:', err);\n      alert('Failed to save summaries.');\n    }\n  }\n\n  setIsSaving(false); // Reset the saving state after the operation\n};\n\n  const handleOpenModal = () => {\n    setShowModal(true);\n  };\n\n  return (\n    <div className=\"summary-page-container\">\n      <h2 className=\"summary-page-header\">Custom Instructions</h2>\n      <div className=\"summary-section\">\n        <h3>How would you like ChatGPT to respond?</h3>\n        {isEditingFirstSummary ? (\n          <textarea\n            value={editableFirstSummary}\n            onChange={(e) => setEditableFirstSummary(e.target.value)}\n            onBlur={handleSaveFirstSummary}\n          />\n        ) : (\n          <p onClick={handleEditFirstSummary}>{editableFirstSummary}</p>\n        )}\n      </div>\n      <div className=\"summary-section\">\n        <h3>What would you like ChatGPT to know about you to provide better responses?</h3>\n        {isEditingSecondSummary ? (\n          <textarea\n            value={editableSecondSummary}\n            onChange={(e) => setEditableSecondSummary(e.target.value)}\n            onBlur={handleSaveSecondSummary}\n          />\n        ) : (\n          <p onClick={handleEditSecondSummary}>{editableSecondSummary}</p>\n        )}\n      </div>\n      <button className=\"save-summary-button\" onClick={handleOpenModal}>Save</button>\n      {showModal && (\n        <SummaryModal\n          title={title}\n          setTitle={setTitle}\n          description={description}\n          setDescription={setDescription}\n          onSave={saveSummaries}\n          onClose={() => setShowModal(false)}\n        />\n      )}\n    </div>\n  );  \n}\n\nexport default SummaryPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}